@using Radzen

@inject WeatherApiClient WeatherApiClient
@inject DialogService DialogService

@page "/"

 <style>
    .rz-grid-table {
        width: unset;
    }
</style>

<RadzenButton ButtonStyle="ButtonStyle.Success" Icon="add_circle_outline" class="mt-2 mb-4" Text="Adicionar novo cliente" Click="@InsertRow" Disabled=@(clientToInsert != null || clientToUpdate != null) />
<RadzenDataGrid @ref="clientsGrid" AllowFiltering="true" FilterPopupRenderMode="PopupRenderMode.OnDemand" AllowPaging="true" PageSize="5" AllowSorting="true"
                Data="@clients" TItem="Client">
    <Columns>
        <RadzenDataGridColumn TItem="Client" Property="Number" Title="Order ID" Width="120px" Frozen="true" />
        <RadzenDataGridColumn TItem="Client" Property="Name" Title="Nome" Width="120px" Frozen="true">
            <EditTemplate Context="client">
                <RadzenTextBox @bind-Value="client.Name" Style="width:200px; display: block" Name="Name" />
                <RadzenRequiredValidator Text="Name is required" Component="Name" Popup="true" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Client" Property="LastName" Title="Último nome" Width="120px" Frozen="true">
            <EditTemplate Context="client">
                <RadzenTextBox @bind-Value="client.LastName" Style="width:200px; display: block" Name="LastName" />
                <RadzenRequiredValidator Text="LastName is required" Component="LastName" Popup="true" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Client" Property="Address" Title="Endereço" Width="120px" Frozen="true">
            <EditTemplate Context="client">
                <RadzenTextBox @bind-Value="client.Address" Style="width:200px; display: block" Name="Address" />
                <RadzenRequiredValidator Text="Address is required" Component="Address" Popup="true" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Client" Property="Number" Title="Número" Width="120px" Frozen="true">
            <Template Context="client">
                @String.Format("{0}", client.Number)
            </Template>
            <EditTemplate Context="client">
                <RadzenDatePicker @bind-Value="client.Number" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Client" Property="DateCreated" Title="Data de criação" Width="120px" Frozen="true">
            <Template Context="client">
                @String.Format("{0:d}", client.DateCreated)
            </Template>
            <EditTemplate Context="client">
                <RadzenDatePicker @bind-Value="client.DateCreated" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Client" Property="DateModificated" Title="Data de modificação" Width="120px" Frozen="true">
            <Template Context="client">
                @String.Format("{0:d}", client.DateModificated)
            </Template>
            <EditTemplate Context="client">
                <RadzenDatePicker @bind-Value="client.DateModificated" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Client" Property="DateDeleted" Title="Data de criação" Width="120px" Frozen="true">
            <Template Context="client">
                @String.Format("{0:d}", client.DateDeleted)
            </Template>
            <EditTemplate Context="client">
                <RadzenDatePicker @bind-Value="client.DateDeleted" Style="width:100%" />
            </EditTemplate>
        </RadzenDataGridColumn>
        <RadzenDataGridColumn TItem="Client" Property="Active" Title="Ativo" Width="120px" Frozen="true">
            <EditTemplate Context="client">
                <RadzenDropDown @bind-Value="client.Active" Data="@clients" TextProperty="Active" ValueProperty="Active" Style="width:100%; display: block;" />
            </EditTemplate>
        </RadzenDataGridColumn>
    </Columns>
</RadzenDataGrid>

@code {
    RadzenDataGrid<Client> clientsGrid;
    IEnumerable<Client> clients;

    Client clientToInsert;
    Client clientToUpdate;

    void Reset()
    {
        clientToInsert = null;
        clientToUpdate = null;
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        clients = await WeatherApiClient.GetClientsAsync();

        // customers = dbContext.Customers;
        // employees = dbContext.Employees;

        // orders = dbContext.Orders.Include("Customer").Include("Employee");
    }

    async Task EditRow(Client client)
    {
        clientToInsert = client;
        await clientsGrid.EditRow(client);
    }


    void OnUpdateRow()
    {

    }

    async Task SaveRow(Client client)
    {
        await clientsGrid.UpdateRow(client);
    }

    void CancelEdit()
    {

    }

    async Task DeleteRow()
    {

    }

    async Task InsertRow()
    {
        clientToInsert = new Client();
        await clientsGrid.InsertRow(clientToInsert);
    }

    void OnCreateRow()
    {
        
    }

    public class Client
    {
        public string? Name { get; set; }
        public string? LastName { get; set; }
        public string? Address { get; set; }
        public int Number { get; set; }
        public bool? Active { get; set; }
        public DateTime? DateModificated { get; set; }
        public DateTime? DateDeleted { get; set; }
        public DateTime? DateCreated { get; set; }
    }
}